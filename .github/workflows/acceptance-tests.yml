name: Acceptance Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, converted_to_draft, ready_for_review]
    branches:
      - main

  push:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: acceptance-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  checks: write
  pull-requests: write

jobs:
  acceptance-tests:
    name: E2E Acceptance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Checkout forms-development-tools
        uses: actions/checkout@v4
        with:
          repository: DEFRA/forms-development-tools
          path: forms-development-tools

      - name: Checkout forms-acceptance-tests
        uses: actions/checkout@v4
        with:
          repository: DEFRA/forms-acceptance-tests
          path: forms-acceptance-tests

      - name: Start test harness
        shell: bash
        run: |
          cd forms-development-tools/test-harness
          touch .env
          touch secrets.env
          ./run-harness.sh exclude=forms-designer

      - name: Build forms-designer
        shell: bash
        run: |
          npm ci
          cp designer/.automated-tests.env designer/.env
          npm run build

      - name: Start forms-designer
        shell: bash
        run: |
          npm run dev > designer.log 2>&1 &
          echo "DESIGNER_PID=$!" >> $GITHUB_ENV

      - name: Wait for forms-designer to start
        shell: bash
        run: |
          echo "Waiting for forms-designer to start..."
          MAX_ATTEMPTS=30
          ATTEMPT=0

          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            if curl --output /dev/null --silent --head --fail http://localhost:3000/health; then
              echo "✅ Forms-designer is ready!"
              break
            fi
            ATTEMPT=$((ATTEMPT + 1))
            echo "Attempt $ATTEMPT/$MAX_ATTEMPTS..."
            sleep 2
          done

          if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
            echo "❌ Forms-designer failed to start"
            tail -50 designer.log
            exit 1
          fi

      - name: Run acceptance tests
        shell: bash
        run: |
          cd forms-acceptance-tests
          npm ci
          npm run test:playwright

      - name: Generate report
        if: always()
        shell: bash
        run: |
          cd forms-acceptance-tests
          npm run report || true

      - name: Collect logs
        if: always()
        shell: bash
        run: |
          echo "=== Test Results ===" > test-logs.txt
          echo "" >> test-logs.txt

          if [ -f forms-acceptance-tests/test-results/.last-run.json ]; then
            cat forms-acceptance-tests/test-results/.last-run.json >> test-logs.txt
          fi

          echo "" >> test-logs.txt
          echo "=== Forms-Designer Logs ===" >> test-logs.txt
          if [ -f designer.log ]; then
            tail -200 designer.log >> test-logs.txt
          fi

          echo "" >> test-logs.txt
          echo "=== Docker Containers ===" >> test-logs.txt
          docker ps -a >> test-logs.txt || true

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: acceptance-test-report
          path: forms-acceptance-tests/allure-report
          if-no-files-found: ignore

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: test-logs.txt
          if-no-files-found: ignore

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

            let body = `## 🧪 Acceptance Test Results\n\n`;

            if (context.job.status === 'success') {
              body += `### ✅ All acceptance tests passed!\n\n`;
            } else {
              body += `### ❌ Some acceptance tests failed\n\n`;
            }

            body += `[View Details](${runUrl}) | [Artifacts](${runUrl})`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🧪 Acceptance Test Results')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Cleanup
        if: always()
        shell: bash
        run: |
          if [ ! -z "$DESIGNER_PID" ]; then
            kill $DESIGNER_PID || true
          fi