{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/accordion/macro.njk" import govukAccordion %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}

<form method="get" action="/library" class="app-search-form" aria-labelledby="search-form-heading">
  <h2 id="search-form-heading" class="govuk-heading-m">Search</h2>

  {% if params.sorting and params.sorting.sortBy and params.sorting.order %}
    <input type="hidden" name="sort" value="{% if params.sorting.sortBy == "updatedAt" %}updated{% else %}title{% endif %}{{ params.sorting.order | capitalize }}">
  {% else %}
    <input type="hidden" name="sort" value="updatedDesc">
  {% endif %}

  {{ govukInput({
    label: {
      text: "Form name"
    },
    id: "form-title",
    name: "title",
    value: params.search.title or "",
    classes: "govuk-!-width-full"
  }) }}

  {% set hasActiveSearch = (params.search.title and params.search.title != "") or
                          (params.search.author and params.search.author != "") or
                          (params.search.author == "all" or params.search.author == "") or
                          (params.search.organisations and params.search.organisations | length) or
                          (params.search.status and params.search.status | length) %}

  {% if hasActiveSearch %}
    <div class="govuk-inset-text govuk-!-margin-bottom-4" aria-labelledby="applied-filters-heading">
      <h3 id="applied-filters-heading" class="govuk-heading-s">Applied filters:</h3>
      <ul class="govuk-list govuk-list--bullet govuk-list--spaced">
        {% if params.search.title and params.search.title != "" %}
          <li><strong>Name:</strong> {{ params.search.title }}</li>
        {% endif %}
        <li>
          <strong>Author:</strong> 
          {% if params.search.author and params.search.author != "" %}
            {% if params.displayName and params.search.author == params.displayName %}
              Me ({{ params.search.author }})
            {% else %}
              {{ params.search.author }}
            {% endif %}
          {% else %}
            all
          {% endif %}
        </li>
        {% if params.search.organisations and params.search.organisations | length %}
          {% for org in params.search.organisations %}
            <li><strong>Organisation:</strong> {{ org }}</li>
          {% endfor %}
        {% endif %}
        {% if params.search.status and params.search.status | length %}
          {% for state in params.search.status %}
            <li><strong>State:</strong> {{ state | capitalize }}</li>
          {% endfor %}
        {% endif %}
      </ul>
    </div>
  {% endif %}

  <div class="govuk-button-group govuk-!-margin-bottom-4">
    {{ govukButton({
      text: "Apply filters",
      classes: "app-search-form__submit"
    }) }}
    {{ govukButton({
      text: "Clear filters",
      href: params.baseUrl,
      classes: "govuk-button--secondary"
    }) }}
  </div>

  <h3 class="govuk-heading-m govuk-!-margin-bottom-1">Advanced search</h3>
  <p class="govuk-body">Apply additional filters</p>

  {% set authors = params.filters.authors | default([]) %}
  {% set organisations = params.filters.organisations | default([]) %}
  {% set statuses = params.filters.statuses | default([]) %}

  {% set authorsRadios = [] %}
  {% for a in authors %}
    {% if params.displayName and a == params.displayName %}
      {% set authorsRadios = (authorsRadios.push({
        text: "Me (" + a + ")",
        value: a,
        checked: params.search.author == a
      }), authorsRadios) %}
    {% else %}
      {% set authorsRadios = (authorsRadios.push({
        text: a,
        value: a,
        checked: params.search.author == a
      }), authorsRadios) %}
    {% endif %}
  {% endfor %}
  {% set authorsRadios = (authorsRadios.push({
    text: "All authors",
    value: "all",
    checked: params.search.author == "all" or not params.search.author
  }), authorsRadios) %}

  {% set orgCheckBoxes = [] %}
  {% for org in organisations %}
    {% set orgCheckBoxes = (orgCheckBoxes.push({
      text: org,
      value: org,
      checked: params.search.organisations and (org in params.search.organisations)
    }), orgCheckBoxes) %}
  {% endfor %}

  {% set statusCheckBoxes = [] %}
  {% for status in statuses %}
    {% set statusCheckBoxes = (statusCheckBoxes.push({
      text: status | capitalize,
      value: status,
      checked: params.search.status and (status in params.search.status)
    }), statusCheckBoxes) %}
  {% endfor %}

  {{ govukAccordion({
    id: "search-filters-advanced",
    rememberExpanded: false,
    items: [
      {
        heading: { text: "Authors" },
        expanded: params.search.author != "",
        content: {
          html: govukRadios({
            name: "author",
            classes: "govuk-radios--small",
            fieldset: {
              legend: {
                text: "Select all authors that apply",
                isPageHeading: false
              }
            },
            items: authorsRadios
          }) | safe
        }
      },
      {
        heading: { text: "Organisation" },
        expanded: params.search.organisations and params.search.organisations.length > 0,
        content: {
          html: govukCheckboxes({
            name: "organisations",
            classes: "govuk-checkboxes--small",
            fieldset: {
              legend: {
                text: "Select all organisations that apply",
                isPageHeading: false
              }
            },
            items: orgCheckBoxes
          }) | safe
        }
      },
      {
        heading: { text: "State" },
        expanded: params.search.status and params.search.status.length > 0,
        content: {
          html: govukCheckboxes({
            name: "status",
            classes: "govuk-checkboxes--small",
            fieldset: {
              legend: {
                text: "Select all states that apply",
                isPageHeading: false
              }
            },
            items: statusCheckBoxes
          }) | safe
        }
      }
    ]
  }) }}

  <div class="govuk-button-group govuk-!-margin-bottom-4">
    {{ govukButton({
      text: "Apply filters",
      classes: "app-search-form__submit"
    }) }}
    {{ govukButton({
      text: "Clear filters",
      href: params.baseUrl,
      classes: "govuk-button--secondary"
    }) }}
  </div>
</form>
